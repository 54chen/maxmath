/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 src/assets/minecraft_-_iron_golem.glb -t -o src/IronGolem.tsx 
Author: Vincent Yanez (https://sketchfab.com/vinceyanez)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/minecraft-iron-golem-b7f1a9a021654c84a67a1ead67291793
Title: Minecraft - Iron Golem
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import IronGolemURL from './assets/minecraft_-_iron_golem.glb?url'
import { useRef,useState } from "react";
import Mark from './Mark';
 
type GLTFResult = GLTF & {
  nodes: {
    Iron_Golem_Iron_Golem_0: THREE.Mesh
  }
  materials: {
    Iron_Golem: THREE.MeshStandardMaterial
  }
}

export default function IronGolem(props: JSX.IntrinsicElements['group']) {
  const ref = useRef<THREE.Group>(null)
  const mark = useRef<THREE.Group>(null)
  const [isVisible, setIsVisible] = useState(false);

  const pointOver = () => {
    setIsVisible(true)
  }
  const piontLeave = () => {
    setIsVisible(false)
  }
  const { nodes, materials } = useGLTF(IronGolemURL) as GLTFResult
  return (
    <group {...props} dispose={null} onPointerOver={pointOver} onPointerLeave={piontLeave} ref={ref}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Iron_Golem_Iron_Golem_0.geometry} material={materials.Iron_Golem} position={[0, 1.5, -0.75]} />
       </group>
       <group ref={mark} visible={isVisible}>
        <Mark scale={0.01} position={[0, 22, 0]}/>
       </group>
    </group>
  )
}

useGLTF.preload(IronGolemURL)
