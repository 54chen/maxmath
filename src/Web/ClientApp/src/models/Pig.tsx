/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 src/assets/minecraft_-_pig.glb -t -o src/Pig.tsx 
Author: Vincent Yanez (https://sketchfab.com/vinceyanez)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/minecraft-pig-98b5949506b84484aecacea589f38c45
Title: Minecraft - Pig
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import PigURL from './assets/minecraft_-_pig.glb?url'
import { useRef,useState } from "react";
import Mark from './Mark';

type GLTFResult = GLTF & {
  nodes: {
    ['Pig_02_-_Default_0']: THREE.Mesh
  }
  materials: {
    ['02_-_Default']: THREE.MeshStandardMaterial
  }
}


export default function Pig(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(PigURL) as GLTFResult
  const mark = useRef<THREE.Group>(null)
  const [isVisible, setIsVisible] = useState(false);

  const pointOver = () => {
    setIsVisible(true)
  }
  const piontLeave = () => {
    setIsVisible(false)
  }
  return (
    <group {...props} dispose={null} onPointerOver={pointOver} onPointerLeave={piontLeave}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.5}>
        <mesh geometry={nodes['Pig_02_-_Default_0'].geometry} material={materials['02_-_Default']} position={[0, -14, 0]} />
      </group>
      <group ref={mark} visible={isVisible}>
        <Mark scale={0.01} position={[0, 10, 0]}/>
      </group>
    </group>
  )
}

useGLTF.preload(PigURL)
