/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 src/assets/tree.glb -t -o src/Tree.tsx 
Author: Coller (https://sketchfab.com/TheCollerroller)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/minecraft-tree-19f631305c714abf9e5973a352f8a55d
Title: Minecraft Tree
*/

import * as THREE from 'three'
// import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import TreeURL from './assets/tree.glb?url'

type ActionName = 'actionNameOne' | 'actionNameTwo';

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}
type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
  }
  materials: {
    Oak_Leaves: THREE.MeshStandardMaterial
    Oak_Log: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Tree(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(TreeURL) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.Oak_Leaves} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.Oak_Log} />
      </group>
    </group>
  )
}

useGLTF.preload(TreeURL)
